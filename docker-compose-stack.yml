version: '3'

services:

  #### SERVICES OF DOMAINS ####

  domain-product-api:
    image: buenotales/mkt-domain-product-api
    environment:
      ASPNETCORE_URLS: http://+:5010
      ConnectionStrings__db-mysql: server=db-mysql;port=3306;user=root;password=root;database=mkt-domain-product;
    ports:
      - "5010:5010"
    networks:
      - net
    depends_on:
      - db-mysql
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]

  domain-order-api:
    image: buenotales/mkt-domain-order-api
    environment:
      ASPNETCORE_URLS: http://+:5011
    ports:
      - "5011:5011"
    networks:
      - net
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]

  domain-profile-api:
    image: buenotales/mkt-domain-profile-api
    environment:
      ASPNETCORE_URLS: http://+:5012
    ports:
      - "5012:5012"
    networks:
      - net
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]

  #### SERVICES OF BUSINESS ####

  business-order_submitted-api:
    image: buenotales/mkt-business-order_submitted-api
    environment:
      ASPNETCORE_URLS: http://+:5110
      Order__UrlBase: http://domain-order-api:5011
      Kafka__Server: infra-kafka:19091
    ports:
      - "5110:5110"
    networks:
      - net
    depends_on:
      - domain-order-api
      - infra-kafka
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]

  # business-clear_sale_integration-worker:
  #   image: buenotales/mkt-business-clear_sale_integration-worker
  #   environment:
  #     Kafka__Server: infra-kafka:19091
  #   networks:
  #     - net
  #   depends_on:
  #     - infra-kafka

  #### DATABASES ####

  db-mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-mysql-data:/var/lib/mysql
    ports:
      - "5306:3306"
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager ]

  #### INFRASTUCTURE ####

  infra-zookeeper:
    image: zookeeper:3.4.9
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=infra-zookeeper:2888:3888
    volumes:
      - infra-zookeeper-data:/data
      - infra-zookeeper-data:/datalog
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager ]

  infra-kafka:
    image: confluentinc/cp-kafka:5.3.0
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://infra-kafka:19091,LISTENER_DOCKER_EXTERNAL://192.168.99.101:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "infra-zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - infra-kafka-data:/var/lib/kafka/data
    depends_on:
      - infra-zookeeper
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager]

  infra-kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "5092:9000"
    environment:
      KAFKA_BROKERCONNECT: "infra-kafka:19091"
    depends_on:
      - infra-kafka
    networks:
      - net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

#### NETWORKS ####

networks:
  net:


volumes:
  db-mysql-data:
  infra-kafka-data:
  infra-zookeeper-data:
